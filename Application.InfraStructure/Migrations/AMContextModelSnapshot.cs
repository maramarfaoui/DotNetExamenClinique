// <auto-generated />
using System;
using AM.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.InfraStructure.Migrations
{
    [DbContext(typeof(AMContext))]
    partial class AMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application.Core.Domain.Admission", b =>
                {
                    b.Property<DateTime>("DateAdmission")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChambreFk")
                        .HasColumnType("int");

                    b.Property<string>("PatientFk")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MotifAdmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbJours")
                        .HasColumnType("int");

                    b.Property<int>("chambreNumeroChambre")
                        .HasColumnType("int");

                    b.Property<string>("patientCIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DateAdmission", "ChambreFk", "PatientFk");

                    b.HasIndex("chambreNumeroChambre");

                    b.HasIndex("patientCIN");

                    b.ToTable("Admission");
                });

            modelBuilder.Entity("Application.Core.Domain.Chambre", b =>
                {
                    b.Property<int>("NumeroChambre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroChambre"));

                    b.Property<int>("CliniqueFk")
                        .HasColumnType("int");

                    b.Property<float>("Prix")
                        .HasColumnType("real");

                    b.Property<int>("typeChambre")
                        .HasColumnType("int");

                    b.HasKey("NumeroChambre");

                    b.HasIndex("CliniqueFk");

                    b.ToTable("Chambre");
                });

            modelBuilder.Entity("Application.Core.Domain.Clinique", b =>
                {
                    b.Property<int>("CliniqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CliniqueId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<int>("NumTel")
                        .HasColumnType("int");

                    b.HasKey("CliniqueId");

                    b.ToTable("Clinique");
                });

            modelBuilder.Entity("Application.Core.Domain.Patient", b =>
                {
                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddresseEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumDossier")
                        .HasColumnType("int");

                    b.Property<int>("NumTel")
                        .HasColumnType("int");

                    b.HasKey("CIN");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("Application.Core.Domain.Admission", b =>
                {
                    b.HasOne("Application.Core.Domain.Chambre", "chambre")
                        .WithMany("admissions")
                        .HasForeignKey("chambreNumeroChambre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Application.Core.Domain.Patient", "patient")
                        .WithMany("Admissions")
                        .HasForeignKey("patientCIN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("chambre");

                    b.Navigation("patient");
                });

            modelBuilder.Entity("Application.Core.Domain.Chambre", b =>
                {
                    b.HasOne("Application.Core.Domain.Clinique", "Clinique")
                        .WithMany("Chambres")
                        .HasForeignKey("CliniqueFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinique");
                });

            modelBuilder.Entity("Application.Core.Domain.Patient", b =>
                {
                    b.OwnsOne("Application.Core.Domain.NomComplet", "NomComplet", b1 =>
                        {
                            b1.Property<string>("PatientCIN")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Nom")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Prenom")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PatientCIN");

                            b1.ToTable("Patient");

                            b1.WithOwner()
                                .HasForeignKey("PatientCIN");
                        });

                    b.Navigation("NomComplet")
                        .IsRequired();
                });

            modelBuilder.Entity("Application.Core.Domain.Chambre", b =>
                {
                    b.Navigation("admissions");
                });

            modelBuilder.Entity("Application.Core.Domain.Clinique", b =>
                {
                    b.Navigation("Chambres");
                });

            modelBuilder.Entity("Application.Core.Domain.Patient", b =>
                {
                    b.Navigation("Admissions");
                });
#pragma warning restore 612, 618
        }
    }
}
